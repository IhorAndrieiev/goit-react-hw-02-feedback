{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styles.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styles.jsx","components/Statistics/Statistics.jsx","components/Section/Section.styles.jsx","components/Section/Section.jsx","components/Notification/Notification.styles.jsx","components/Notification/Notification.jsx","components/Feedback/Feedback.jsx","App.jsx","index.js"],"names":["Button","styled","button","Container","div","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","onClick","Paragraf","p","Statistics","good","neutral","bad","total","positivePercentage","CustomSection","section","Title","h2","Section","title","children","Message","Notification","message","Feedback","state","props","initialGood","initialNeutral","initialBad","handleClick","e","target","setState","prevState","countPositiveFeedbackPercentage","Math","floor","countTotalFeedback","Object","keys","this","feedbacksTotal","positiveFeedbackPercentage","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAEaA,EAASC,IAAOC,OAAV,0VAmBNC,EAAYF,IAAOG,IAAV,oI,OCjBTC,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OAC7B,cAACJ,EAAD,UACGG,EAAQE,KAAI,SAAAC,GAAM,OACjB,cAACT,EAAD,CAGEU,KAAK,SACLC,KAAMF,EACNG,QAASL,EALX,SAOGE,GALIA,SCPAN,EAAYF,IAAOG,IAAV,wDAITS,EAAWZ,IAAOa,EAAV,4FCHRC,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACpD,OACI,eAAC,EAAD,WACI,eAACP,EAAD,oBAAiBG,KACjB,eAACH,EAAD,uBAAoBI,KACpB,eAACJ,EAAD,mBAAgBK,KAChB,eAACL,EAAD,oBAAiBM,KACjB,eAACN,EAAD,iCAA8BO,EAA9B,YCRCC,EAAgBpB,IAAOqB,QAAV,8FAMbC,EAAQtB,IAAOuB,GAAV,+DCJLC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,eAACN,EAAD,WACE,cAACE,EAAD,UAAQG,IACPC,MCNMC,EAAU3B,IAAOa,EAAV,uFCAPe,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3B,OACI,cAACF,EAAD,UAAUE,KCMLC,EAAb,4MAaEC,MAAQ,CACNhB,KAAM,EAAKiB,MAAMC,YACjBjB,QAAS,EAAKgB,MAAME,eACpBjB,IAAK,EAAKe,MAAMG,YAhBpB,EAkBIC,YAAc,SAACC,GACf,IAAM3B,EAAO2B,EAAEC,OAAO5B,KACtB,EAAK6B,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,kBAEX9B,EAAO,EAAKqB,MAAMrB,GAAQ,QAtBjC,EAmCI+B,gCAAkC,WAClC,IAAQ1B,EAAS,EAAKgB,MAAdhB,KACR,OAAO2B,KAAKC,MAAO5B,EAAO,EAAK6B,qBAAwB,MArC3D,EAwCIA,mBAAqB,WACrB,MAA+B,EAAKb,MACpC,OADA,EAAQhB,KAAR,EAAcC,QAAd,EAAuBC,KAzC3B,4CA4CA,WACE,IAAMZ,EAAUwC,OAAOC,KAAKC,KAAKhB,OAE/B,EAA+BgB,KAAKhB,MAA5BhB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB+B,EAAiBD,KAAKH,qBACtBK,EAA6BF,KAAKN,kCACpC,OACI,qCACI,cAAC,EAAD,CAAShB,MAAO,wBAAhB,SACI,cAAC,EAAD,CACIpB,QAASA,EACTC,gBAAiByC,KAAKX,gBAa9B,cAAC,EAAD,CAASX,MAAO,aAAhB,SACKuB,EAAkB,cAAC,EAAD,CACnBjC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAQ8B,EACR7B,mBAAoB8B,IAE5B,cAAC,EAAD,CAAcpB,QAAS,+BA5EnC,GAA8BqB,aAAjBpB,EACJqB,aAAe,CAClBlB,YAAa,EACbC,eAAgB,EAChBC,WAAW,GCVV,IAAMiB,EAAM,kBACb,cAAC,EAAD,KCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.54eab274.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n  background-color: blue;\r\n//   border: none;\r\n  border-radius: 50%;\r\n//   outline: none;\r\n  padding: 8px 16px;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  margin: 10px;\r\n  width: 110px;\r\n\r\n  &:hover {\r\n    color: #ff6b0a;\r\n  }\r\n`;\r\nexport const Container = styled.div`\r\n  background-color: #f5f5f5;\r\n  margin: auto;\r\n  padding: 5px;\r\n  width: 600px;\r\n  text-align: center;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport{Button} from './FeedbackOptions.styles'\r\nimport { Container } from './FeedbackOptions.styles'\r\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <Container>\r\n    {options.map(option => (\r\n      <Button\r\n        \r\n        key={option}\r\n        type=\"button\"\r\n        name={option}\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {option}\r\n      </Button>\r\n    ))}\r\n  </Container>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\nbackground-color: #f5f5f5;\r\n`;\r\n\r\nexport const Paragraf = styled.p`\r\nbackground-color: #f5f5f5;\r\nfont-weight: 500;\r\npadding: 5px;\r\n\r\n`;","import PropTypes from 'prop-types';\r\nimport { Container } from './Statistics.styles'\r\nimport{Paragraf} from './Statistics.styles'\r\nexport const Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <Container>\r\n            <Paragraf>Good: {good}</Paragraf>\r\n            <Paragraf>Neutral: {neutral}</Paragraf>\r\n            <Paragraf>Bad: {bad}</Paragraf>\r\n            <Paragraf>Total:{total}</Paragraf>\r\n            <Paragraf>Positive feedback: {positivePercentage} %</Paragraf>\r\n        </Container>\r\n        \r\n    );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const CustomSection = styled.section`\r\ntext-align: center;\r\nmargin: auto;\r\nbackground-color: #f5f5f5;\r\n\r\n`;\r\nexport const Title = styled.h2`\r\npadding: 10px;\r\nfont-weight: 900;\r\n`;","import PropTypes from 'prop-types';\r\nimport { CustomSection } from './Section.styles';\r\nimport{Title} from './Section.styles'\r\n\r\nexport const Section = ({ title, children }) => {\r\n  return (\r\n    <CustomSection >\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </CustomSection>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Message = styled.p`\r\nfont-weight: 700;\r\npadding: 10px;\r\npadding-bottom: 110px;\r\n`;","import PropTypes from 'prop-types';\r\nimport {Message} from './Notification.styles'\r\nexport const Notification = ({ message }) => {\r\n    return (\r\n        <Message>{message}</Message>\r\n    );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message:PropTypes.string.isRequired  \r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FeedbackOptions} from '../FeedbackOptions/FeedbackOptions'\r\nimport { Statistics } from '../Statistics/Statistics'\r\nimport { Section } from '../Section/Section'\r\nimport { Notification} from '../Notification/Notification'\r\n//import { Controls } from '../Controls/Controls'\r\n\r\n\r\n\r\nexport class Feedback extends Component {\r\n  static defaultProps = {\r\n      initialGood: 0,\r\n      initialNeutral: 0,\r\n      initialBad:0,\r\n    };\r\n    \r\n    static propTypes = {\r\n        initialGood: PropTypes.number.isRequired,\r\n        initialNeutral: PropTypes.number.isRequired,\r\n        initialBad: PropTypes.number.isRequired,\r\n    };\r\n\r\n  state = {\r\n    good: this.props.initialGood,\r\n    neutral: this.props.initialNeutral,\r\n    bad: this.props.initialBad,\r\n  };\r\n    handleClick = (e) => {\r\n    const name = e.target.name;\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: this.state[name] + 1,\r\n    }));\r\n  };\r\n    // handleClickGood = (e) => {\r\n    //     this.setState(prevState => ({ good: prevState.good + 1 }));\r\n    // };\r\n    // handleClickNeutral = (e) => {\r\n    //     this.setState(prevState => ({ neutral: prevState.neutral + 1 }));\r\n    // };\r\n    // handleClickBad = (e) => {\r\n    //     this.setState(prevState => ({ bad: prevState.bad + 1 }));\r\n    // };\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    return Math.floor((good / this.countTotalFeedback()) * 100);\r\n  };\r\n\r\n    countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\nrender() {\r\n  const options = Object.keys(this.state);\r\n \r\n    const { good, neutral, bad } = this.state;\r\n    const feedbacksTotal = this.countTotalFeedback();\r\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\r\n        return (\r\n            <>\r\n                <Section title={\"Please leave feedback\"}>\r\n                    <FeedbackOptions\r\n                        options={options}\r\n                        onLeaveFeedback={this.handleClick}\r\n                    />\r\n                </Section>\r\n                {/* <h1>\r\n                    Please leave feedback\r\n                </h1> */}\r\n                 \r\n                {/* <Controls\r\n                    onClickGood={ this.handleClickGood}\r\n                    onClickNeutral={this.handleClickNeutral }\r\n                    onClickBad={this.handleClickBad}\r\n                /> */}\r\n                {/* <h2>Statistics</h2> */}\r\n                <Section title={\"Statistics\"}>\r\n                    {feedbacksTotal ? (<Statistics\r\n                    good={good}\r\n                    neutral={neutral}\r\n                    bad={bad}\r\n                    total={ feedbacksTotal}\r\n                    positivePercentage={positiveFeedbackPercentage}\r\n                    />):(\r\n            <Notification message={\"No feedback given\"} />\r\n          )}\r\n              {/* {feedbacksTotal&&(<Statistics\r\n                    good={good}\r\n                    neutral={neutral}\r\n                    bad={bad}\r\n                    total={ feedbacksTotal}\r\n                    positivePercentage={positiveFeedbackPercentage}\r\n                    />)} */}\r\n                </Section>\r\n                \r\n            </>\r\n        )\r\n    }\r\n}","\nimport React from 'react';\nimport {Feedback} from './components/Feedback/Feedback';\n\nexport const App = () => \n      <Feedback />\n        \n      \n\n     \n    \n  \n\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}